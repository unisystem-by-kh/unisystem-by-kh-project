<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="boardMapper">

   <!-- Board DTO에 대한 resultMap -->
   <resultMap type="Board" id="board_rm">
      <id property="boardNo" column="BOARD_NO" />

      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardCDate" column="BOARD_C_DATE" />
      <result property="boardUDate" column="BOARD_U_DATE" />

      <result property="boardCount" column="BOARD_COUNT" />
      <result property="boardSt" column="BOARD_ST" />
      <result property="replyCount" column="REPLY_COUNT" />
      
      <result property="memberNo" column="MEMBER_NO" />
      <result property="memberName" column="MEMBER_NAME" />
      <result property="categoryNo" column="CATEGORY_NO" />

      <result property="departmentName" column="DEPARTMENT_NAME" />
     
      <collection property="fileList" select="selectFileList"
         column="BOARD_NO" javaType="java.util.ArrayList" ofType="BoardFile">
      </collection>
      
      <collection property="replyList"
			select="selectCommentList" column="BOARD_NO"
			javaType="java.util.ArrayList" ofType="Reply">
		</collection>

   </resultMap>
   
   <resultMap type="BoardFile" id="boardFile_rm">
      <id property="boardFileNo" column="BOARD_FILE_NO" />

      <result property="boardFilePath" column="BOARD_FILE_PATH" />
      <result property="boardFileOriginal" column="BOARD_FILE_ORIGINAL" />
      <result property="boardFileRename" column="BOARD_FILE_RENAME" />
      
      <result property="boardFileCategoryNo" column="BOARD_FILE_CATEGORY_NO" />
      <result property="boardNo" column="BOARD_NO" />
   </resultMap>
   
   
   <resultMap type="Reply" id="reply_rm">
		<id property="replyNo" column="REPLY_NO" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyDate" column="REPLY_DATE" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="replySt" column="REPLY_ST" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
	</resultMap>


	<!-- 게시판 종류 목록 조회 -->
   <select id="selectCategory" resultType="map">
		SELECT * 
		FROM CATEGORY
		ORDER BY 1
   </select>

	<!-- 게시글 목록 조회 모음 -->

	<!-- 안되면 복구 용도 -->

	<!-- 자유게시판에만 있는 코드(시작)
		(SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME
		FROM BOARD_FILE F
		WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL 
			자유게시판에만 있는 코드(끝) -->

	<!-- 1:1문의, 학과공지에만 있는 코드(시작) -->
       <!-- (SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME FROM BOARD_FILE F
		    WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL -->
	<!-- 1:1문의, 학과공지에만 있는 코드(끝) -->

	<!-- 1:1문의, 학과공지에만 있는 코드(시작) -->
	  <!-- JOIN "DEPARTMENT" USING(DEPARTMENT_NO)
      WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D') -->
	<!-- 1:1문의, 학과공지에만 있는 코드(끝) -->



	<!-- 게시글 목록 조회(공지사항, 자료실, 자유게시판, 1:1문의, 학과공지) -->
	<select id="selectBoardList" resultMap="board_rm">
	SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_CONTENT, BOARD_ST, 
	<if test="categoryNo == 2 or categoryNo == 4">
		DEPARTMENT_NAME, 
	</if>
		 <![CDATA[
		        CASE  
		        WHEN SYSDATE - BOARD_C_DATE < 1/24/60
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1/24
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
		        ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
		        END BOARD_C_DATE,
		    ]]>

		       (SELECT COUNT(*) FROM "REPLY" R
			    WHERE R.BOARD_NO = B.BOARD_NO
				AND R.REPLY_ST = 'N') REPLY_COUNT

				<if test="categoryNo == 3" > <!-- 자유게시판일 경우 -->
					,
					(SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME
					FROM BOARD_FILE F
					WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL
				</if>
				<if test="categoryNo == 4"> <!-- 학과공지, 1:1문의일 경우 -->
					,
					(SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME FROM BOARD_FILE F
		    		WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL
				</if>

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		
		<choose>
			<when test="categoryNo == 2 or categoryNo == 4"> <!-- 학과공지, 1:1문의 -->
				JOIN "DEPARTMENT" USING(DEPARTMENT_NO)
     			WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
			</when>
			<otherwise>
				JOIN "CATEGORY" USING(CATEGORY_NO)
				WHERE BOARD_ST = 'N'
			</otherwise>
		</choose>
      	AND CATEGORY_NO = ${categoryNo}
		ORDER BY BOARD_NO DESC
	</select>

	<!-- 게시글 목록 조회 모음(검색) -->

	<!-- 게시글 목록 조회 검색(공지사항 : 제목/내용, 자유게시판, 1:1문의, 학과공지) -->
	<select id="selectBoardList_search" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_CONTENT, BOARD_ST,
		<![CDATA[
			CASE  
			WHEN SYSDATE - BOARD_C_DATE < 1/24/60
			THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
			WHEN SYSDATE - BOARD_C_DATE < 1/24
			THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
			WHEN SYSDATE - BOARD_C_DATE < 1
			THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
			ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
			END BOARD_C_DATE,
		]]>

		(SELECT COUNT(*) FROM "REPLY" R
		WHERE R.BOARD_NO = B.BOARD_NO
		AND R.REPLY_ST = 'N') REPLY_COUNT

		<if test="categoryNo == 3">
			,
			(SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME FROM BOARD_FILE F
		    WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL
		</if>

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		<if test="categoryNo == 1 or categoryNo == 3">
		JOIN "CATEGORY" USING(CATEGORY_NO)
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
			<choose>
				<!-- 제목 -->
				<when test='key == "t"'>
					AND BOARD_TITLE LIKE '%${query}%'
				</when>
				<!-- 내용 -->
				<when test='key == "c"'>
					AND BOARD_CONTENT LIKE '%${query}%'
				</when>
				<!-- 제목 + 내용 -->
				<when test='key == "tc"'>
					AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
				</when>
				<!-- 작성자(닉네임) -->
				<when test='key == "w"'>
					AND MEMBER_NAME LIKE '%${query}%'
				</when>
			</choose>
		</if>
		<if test="categoryNo == 2 or categoryNo == 4">
			WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
			AND CATEGORY_NO = ${categoryNo}
			AND MEMBER_NAME LIKE '%${query}%'
		</if>
		ORDER BY BOARD_NO DESC
	</select>

	<!--  목록 조회(검색)  -->

	<!-- 게시글 목록 조회 모음(끝) -->

	<!-- listCount(시작) -->

	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
   <select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
   </select>

   <!-- 1:1문의 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 수 조회 -->
   <select id="getListCount_inquiry" resultType="_int">
      SELECT COUNT(*)
      FROM BOARD
      JOIN MEMBER USING(MEMBER_NO)
      WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
      AND CATEGORY_NO = ${categoryNo}
      AND MEMBER_NAME LIKE '%${query}%'
   </select>

   <!-- 자유게시판 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 수 조회 -->
   <select id="getListCount_search" resultType="_int">
      SELECT COUNT(*)
      FROM BOARD

      <!-- 작성자 검색 -->
      <if test='key == "w"'>
         JOIN MEMBER USING(MEMBER_NO)
      </if>

      WHERE BOARD_ST = 'N'
      AND CATEGORY_NO = ${categoryNo}

      <choose>
         <when test='key == "t"'>
            <!-- 제목 -->
            AND BOARD_TITLE LIKE '%${query}%'
         </when>

         <when test='key == "c"'>
            <!-- 내용 -->
            AND BOARD_CONTENT LIKE '%${query}%'
         </when>

         <when test='key == "tc"'>
            <!-- 제목 + 내용 -->
            AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
            '%${query}%')
         </when>

         <when test='key == "w"'>
            <!-- 작성자(닉네임) -->
            AND MEMBER_NAME LIKE '%${query}%'
         </when>
      </choose>
   </select>

	<!-- listCount(끝) -->

	<!-- 게시판 상세 조회(시작) -->
   
   <!-- 자유게시판 상세 조회 -->
   <select id="selectFreeBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, CATEGORY_NO,
		BOARD_COUNT, MEMBER_NAME, MEMBER_NO, MEMBER_PROFILE,
		TO_CHAR(BOARD_C_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS BOARD_C_DATE,
		TO_CHAR(BOARD_U_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS BOARD_U_DATE,
		(SELECT COUNT(*) FROM "REPLY" R
		    WHERE R.BOARD_NO = B.BOARD_NO
		    AND R.REPLY_ST = 'N') REPLY_COUNT
		FROM "BOARD" B
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
		AND BOARD_NO = ${boardNo}
   </select>

   <!-- 1:1문의 상세 조회 -->
   <select id="selectInquiryBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, CATEGORY_NO,
		BOARD_COUNT, MEMBER_NAME, MEMBER_NO, DEPARTMENT_NAME,
		TO_CHAR(BOARD_C_DATE, 'YYYY"년" MM"월" DD"일" ') AS BOARD_C_DATE,
		TO_CHAR(BOARD_U_DATE, 'YYYY"년" MM"월" DD"일" ') AS BOARD_U_DATE,
		(SELECT COUNT(*) FROM "REPLY" R
		    WHERE R.BOARD_NO = B.BOARD_NO
		    AND R.REPLY_ST = 'N') REPLY_COUNT
		FROM BOARD B
		JOIN MEMBER USING(MEMBER_NO)
		JOIN DEPARTMENT USING(DEPARTMENT_NO)
		WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
		AND CATEGORY_NO = ${categoryNo}
		AND BOARD_NO = ${boardNo}
   </select>

   <!-- 게시판 상세 조회(끝) -->
   
   
   <!-- 조회수 증가 -->
   <update id="updateReadCount">
      UPDATE BOARD
      SET BOARD_COUNT = BOARD_COUNT + 1
      WHERE BOARD_NO = #{boardNo}
   </update>
   
   

   <!-- 특정 게시글 이미지 조회 -->
   <select id="selectFileList" resultMap="boardFile_rm">
      SELECT * FROM BOARD_FILE
      WHERE BOARD_NO = #{boardNo}
   </select>

   
   

   
	
	
	
	
	
	
	
	<!-- 1:1문의 게시글 작성 -->
	<insert id="inquiryBoardWrite" parameterType="Board"
		useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BOARD
		VALUES( #{boardNo},
		#{boardTitle},
		#{boardContent},
		DEFAULT, NULL, DEFAULT, #{boardSt},
		#{memberNo},
		#{categoryNo}
		)
	</insert>
	
	<!-- 1:1문의 파일 삽입 -->
	<insert id="insertInquiryFile" parameterType="list">
		INSERT INTO BOARD_FILE
		SELECT SEQ_FILE_NO.NEXTVAL, A.*
		FROM (
		<foreach collection="list" item="file" separator=" UNION ALL ">
			SELECT
			#{file.boardFilePath} BOARD_FILE_PATH,
			#{file.boardFileOriginal} BOARD_FILE_ORIGINAL,
			#{file.boardFileRename} BOARD_FILE_RENAME,
			
			#{file.boardFileCategoryNo} CATEGORY_NO,
			
			#{file.boardNo} BOARD_NO
			FROM DUAL
		</foreach>

		) A
	</insert>
	
	
	
	

<!-- 공지사항 상세페이지 -->
	<select id="noticeDetailBoard" resultMap="board_rm">
		SELECT BOARD_TITLE, MEMBER_NAME, BOARD_CONTENT, TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD') AS BOARD_C_DATE, BOARD_COUNT
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_ST = 'N'
		AND BOARD_NO = #{boardNo}
	</select>
	
<!-- 공지사항 작성 페이지 -->
	<insert id="noticeBoardWrite" parameterType="Board" useGeneratedKeys="true">
			<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
				 
		INSERT INTO BOARD
		VALUES( #{boardNo},
		#{boardTitle},
		#{boardContent},
		DEFAULT, NULL, DEFAULT, #{boardSt},
		#{memberNo},
		#{categoryNo}
		)
	
	</insert>
	
	<!-- 공지사항 파일업로드 -->
	<insert id="uploadList">
	INSERT INTO BOARD_FILE
	SELECT SEQ_FILE_NO.NEXTVAL, A.*
	FROM (
		<foreach collection="list" item="file" separator=" UNION ALL ">
			SELECT
			#{file.boardFilePath} BOARD_FILE_PATH,
			#{file.boardFileOriginal} BOARD_FILE_ORIGINAL,
			#{file.boardFileRename} BOARD_FILE_RENAME,
			
			#{file.boardFileCategoryNo} CATEGORY_NO,
			
			#{file.boardNo} BOARD_NO
			FROM DUAL
		</foreach>

		) A
	</insert>
	
	
		
		
	
	
	

	<!-- 특정 게시글 댓글 조회 -->
	<select id="selectCommentList" resultMap="reply_rm">
		SELECT  C.* FROM
		(SELECT REPLY_NO, REPLY_CONTENT,
		TO_CHAR(REPLY_DATE, 'YYYY"년"
		MM"월" DD"일" HH24"시" MI"분" SS"초"') REPLY_DATE,
		BOARD_NO, MEMBER_NO,
		MEMBER_NAME, MEMBER_PROFILE, REPLY_ST
		FROM REPLY
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo} )C
		WHERE
		REPLY_ST = 'N'
		ORDER BY REPLY_NO DESC
	</select>
	
	<!-- 게시판에 있는 파일 조회 -->	
	<select id="selectBoardFile" resultMap="boardFile_rm">
		SELECT * FROM BOARD_FILE
		WHERE BOARD_NO = #{boardNo}
	</select>

	<!-- 자료실 상세 조회 -->
	<select id="boardDataDetail" resultMap="board_rm">
		SELECT BOARD_TITLE, MEMBER_NAME, BOARD_CONTENT, TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD') AS BOARD_C_DATE, BOARD_COUNT, MEMBER_NO
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_ST = 'N'
		AND BOARD_NO = #{boardNo}
	</select>
	
	<!-- 1:1문의 게시글 삭제 -->
	<update id="inquiryBoardDelete">
		UPDATE BOARD SET BOARD_ST = 'Y'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 자유게시판 게시글 삭제 -->
	<update id="freeBoardDelete">
		UPDATE BOARD SET BOARD_ST = 'Y'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 1:1문의 게시글 수정 -->
	<update id="inquiryBoardUpdate">
		UPDATE BOARD SET BOARD_TITLE =
		#{boardTitle},
		BOARD_CONTENT = #{boardContent},
		BOARD_U_DATE = SYSDATE,
		BOARD_ST = #{boardSt}
		WHERE BOARD_NO
		= #{boardNo}
		AND CATEGORY_NO = #{categoryNo}
	</update>
	<!-- 자유게시판 게시글 수정 -->
	<update id="updateFreeBoardList">
		UPDATE BOARD 
		SET BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		BOARD_U_DATE = SYSDATE
		WHERE BOARD_NO = #{boardNo}
		AND CATEGORY_NO = #{categoryNo}
	</update>
	
	<!-- 1:1문의 파일 삭제 -->
	<delete id="inquiryFileDelete">
		DELETE FROM BOARD_FILE
		WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 1:1문의 파일 수정 -->
	<update id="inquiryFileUpdate">
		UPDATE BOARD_FILE SET BOARD_FILE_PATH = #{boardFilePath}
		,BOARD_FILE_ORIGINAL = #{boardFileOriginal}
		,BOARD_FILE_RENAME = #{boardFileRename}
		WHERE
		BOARD_NO = #{boardNo}
		
	</update>
	<!-- 1:1문의 파일 삽입 -->
	<insert id="inquiryFileInsert">
		INSERT INTO BOARD_FILE
		VALUES( SEQ_FILE_NO.NEXTVAL,
		#{boardFilePath},
		#{boardFileOriginal},
		#{boardFileRename},
		2,
		#{boardNo}
		)

	</insert>
	
	
	<!-- 1:1문의 비밀번호 확인 -->
	<select id="boardCheck" resultType="_int">
		SELECT COUNT(*) FROM MEMBER 
		WHERE MEMBER_NO = (SELECT MEMBER_NO FROM BOARD WHERE BOARD_NO = #{boardNo})
		AND MEMBER_PW = #{modalPw}
	</select>
	
	
	
	<!-- 학과공지 파일업로드 -->
	<insert id="insertDepartmentFile">
	INSERT INTO BOARD_FILE
	SELECT SEQ_FILE_NO.NEXTVAL, A.*
	FROM (
		<foreach collection="list" item="file" separator=" UNION ALL ">
			SELECT
			#{file.boardFilePath} BOARD_FILE_PATH,
			#{file.boardFileOriginal} BOARD_FILE_ORIGINAL,
			#{file.boardFileRename} BOARD_FILE_RENAME,
			
			2,
			
			#{file.boardNo} BOARD_NO
			FROM DUAL
		</foreach>

		) A
	</insert>
	
	
	<!-- 학과공지 이미지업로드 -->
	<insert id="insertDepartmentImage">
	INSERT INTO BOARD_FILE
	SELECT SEQ_FILE_NO.NEXTVAL, A.*
	FROM (
		<foreach collection="list" item="images" separator=" UNION ALL ">
			SELECT
			#{images.boardFilePath} BOARD_FILE_PATH,
			#{images.boardFileOriginal} BOARD_FILE_ORIGINAL,
			#{images.boardFileRename} BOARD_FILE_RENAME,
			
			1,
			
			#{images.boardNo} BOARD_NO
			FROM DUAL
		</foreach>

		) A
	</insert>
	
	<!-- 학과공지 게시글 수정 -->
	<update id="updateDepartmentBoard">
		UPDATE BOARD SET BOARD_TITLE =
		#{boardTitle},
		BOARD_CONTENT = #{boardContent},
		BOARD_U_DATE = SYSDATE
		WHERE BOARD_NO
		= #{boardNo}
		AND CATEGORY_NO = #{categoryNo}
	</update>
	
	
	
</mapper>








