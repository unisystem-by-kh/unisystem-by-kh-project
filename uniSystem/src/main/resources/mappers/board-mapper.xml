<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="boardMapper">

   <!-- Board DTO에 대한 resultMap -->
   <resultMap type="Board" id="board_rm">
      <id property="boardNo" column="BOARD_NO" />

      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardCDate" column="BOARD_C_DATE" />
      <result property="boardUDate" column="BOARD_U_DATE" />

      <result property="boardCount" column="BOARD_COUNT" />
      <result property="boardSt" column="BOARD_ST" />
      <result property="replyCount" column="REPLY_COUNT" />
      
      <result property="memberNo" column="MEMBER_NO" />
      <result property="memberName" column="MEMBER_NAME" />
      <result property="categoryNo" column="CATEGORY_NO" />

      <result property="departmentName" column="DEPARTMENT_NAME" />
     
      <collection property="fileList" select="selectFileList"
         column="BOARD_NO" javaType="java.util.ArrayList" ofType="BoardFile">
      </collection>
      
      <collection property="replyList"
			select="selectCommentList" column="BOARD_NO"
			javaType="java.util.ArrayList" ofType="Reply">
		</collection>

   </resultMap>
   
   <resultMap type="BoardFile" id="boardFile_rm">
      <id property="boardFileNo" column="BOARD_FILE_NO" />

      <result property="boardFilePath" column="BOARD_FILE_PATH" />
      <result property="boardFileOriginal" column="BOARD_FILE_ORIGINAL" />
      <result property="boardFileRename" column="BOARD_FILE_RENAME" />
      
      <result property="boardFileCategoryNo" column="BOARD_FILE_CATEGORY_NO" />
      <result property="boardNo" column="BOARD_NO" />
   </resultMap>
   
   
   <resultMap type="Reply" id="reply_rm">
		<id property="replyNo" column="REPLY_NO" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyDate" column="REPLY_DATE" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="replySt" column="REPLY_ST" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
	</resultMap>

   <!-- 게시판 종류 목록 조회 -->
   <select id="selectCategory" resultType="map">
		SELECT * 
		FROM CATEGORY
		ORDER BY 1
   </select>

   <!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
   <select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
   </select>

   <!-- 게시글 목록 조회 -->
   <select id="selectFreeBoardList" resultMap="board_rm">
      SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_CONTENT, BOARD_ST,
      
		    <![CDATA[
		        CASE  
		        WHEN SYSDATE - BOARD_C_DATE < 1/24/60
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1/24
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
		        ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
		        END BOARD_C_DATE,
		    ]]>
		    
		    (SELECT COUNT(*) FROM "REPLY" R
		    WHERE R.BOARD_NO = B.BOARD_NO
		    AND R.REPLY_ST = 'N') REPLY_COUNT,
		    
		    (SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME
		    FROM BOARD_FILE F
		    WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL
		    
		    
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "CATEGORY" USING(CATEGORY_NO)
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
		ORDER BY BOARD_NO DESC
		
   </select>
   
   <!-- 자유게시판 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 수 조회 -->
   <select id="getListCount_search" resultType="_int">
      SELECT COUNT(*)
      FROM BOARD

      <!-- 작성자 검색 -->
      <if test='key == "w"'>
         JOIN MEMBER USING(MEMBER_NO)
      </if>

      WHERE BOARD_ST = 'N'
      AND CATEGORY_NO = ${categoryNo}

      <choose>
         <when test='key == "t"'>
            <!-- 제목 -->
            AND BOARD_TITLE LIKE '%${query}%'
         </when>

         <when test='key == "c"'>
            <!-- 내용 -->
            AND BOARD_CONTENT LIKE '%${query}%'
         </when>

         <when test='key == "tc"'>
            <!-- 제목 + 내용 -->
            AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
            '%${query}%')
         </when>

         <when test='key == "w"'>
            <!-- 작성자(닉네임) -->
            AND MEMBER_NAME LIKE '%${query}%'
         </when>
      </choose>
   </select>
   
	<!-- 자유게시판 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 목록 조회 -->
   <select id="searchFreeBoardList" resultMap="board_rm">
      SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_CONTENT,
      
		    <![CDATA[
		        CASE  
		        WHEN SYSDATE - BOARD_C_DATE < 1/24/60
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1/24
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
		        ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
		        END BOARD_C_DATE,
		    ]]>
		    
		    (SELECT COUNT(*) FROM "REPLY" R
		    WHERE R.BOARD_NO = B.BOARD_NO
		    AND R.REPLY_ST = 'N') REPLY_COUNT,
		    
		    (SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME FROM BOARD_FILE F
		    WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL
		    
		    
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "CATEGORY" USING(CATEGORY_NO)
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
		
		<choose>
			<when test='key == "t"'>
			   <!-- 제목 -->
			   AND BOARD_TITLE LIKE '%${query}%'
			</when>
			
			<when test='key == "c"'>
			   <!-- 내용 -->
			   AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			
			<when test='key == "tc"'>
			   <!-- 제목 + 내용 -->
			   AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
			   '%${query}%')
			</when>
			
			<when test='key == "w"'>
			   <!-- 작성자(닉네임) -->
			   AND MEMBER_NAME LIKE '%${query}%'
			</when>
		</choose>
		
		ORDER BY BOARD_NO DESC
		
   </select>
   
   <!-- 자유게시판 상세 조회 -->
   <select id="selectFreeBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, CATEGORY_NO,
		BOARD_COUNT, MEMBER_NAME, MEMBER_NO, MEMBER_PROFILE,
		TO_CHAR(BOARD_C_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS BOARD_C_DATE,
		TO_CHAR(BOARD_U_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS BOARD_U_DATE,
		(SELECT COUNT(*) FROM "REPLY" R
		    WHERE R.BOARD_NO = B.BOARD_NO
		    AND R.REPLY_ST = 'N') REPLY_COUNT
		FROM "BOARD" B
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
		AND BOARD_NO = ${boardNo}
   </select>
   
   
   <!-- 조회수 증가 -->
   <update id="updateReadCount">
      UPDATE BOARD
      SET BOARD_COUNT = BOARD_COUNT + 1
      WHERE BOARD_NO = #{boardNo}
   </update>
   
   

   <!-- 특정 게시글 이미지 조회 -->
   <select id="selectFileList" resultMap="boardFile_rm">
      SELECT * FROM BOARD_FILE
      WHERE BOARD_NO = #{boardNo}
   </select>

   <!-- 1:1문의 상세 조회 -->
   <select id="selectInquiryBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, CATEGORY_NO,
		BOARD_COUNT, MEMBER_NAME, MEMBER_NO, DEPARTMENT_NAME,
		TO_CHAR(BOARD_C_DATE, 'YYYY"년" MM"월" DD"일" ') AS BOARD_C_DATE,
		TO_CHAR(BOARD_U_DATE, 'YYYY"년" MM"월" DD"일" ') AS BOARD_U_DATE
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		JOIN DEPARTMENT USING(DEPARTMENT_NO)
		WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
		AND CATEGORY_NO = ${categoryNo}
		AND BOARD_NO = ${boardNo}
   </select>
   

   
	<!-- 1:1문의 게시판 목록조회 -->
	<select id="selectinquiryBoardList" resultMap="board_rm">
	 SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_ST,
         
		<![CDATA[
		CASE  
		   WHEN SYSDATE - BOARD_C_DATE < 1/24/60
		   THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
		   WHEN SYSDATE - BOARD_C_DATE < 1/24
		   THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
		   WHEN SYSDATE - BOARD_C_DATE < 1
		   THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
		   ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
		END BOARD_C_DATE,
		]]>
		
      (SELECT COUNT(*) FROM "REPLY" C
      WHERE C.BOARD_NO = B.BOARD_NO
      AND C.REPLY_ST = 'N') REPLY_COUNT,
      

       (SELECT BOARD_FILE_PATH || BOARD_FILE_RENAME FROM BOARD_FILE F
		    WHERE F.BOARD_NO = B.BOARD_NO) THUMBNAIL



      FROM "BOARD" B
      JOIN "MEMBER" USING(MEMBER_NO)
      WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
      AND CATEGORY_NO = ${categoryNo}
      
      
      
      ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- 1:1문의 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 수 조회 -->
   <select id="getListCount_inquiry" resultType="_int">
      SELECT COUNT(*)
      FROM BOARD
      JOIN MEMBER USING(MEMBER_NO)
      WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
      AND CATEGORY_NO = ${categoryNo}
      AND MEMBER_NAME LIKE '%${query}%'
   </select>
	
	<!-- 1:1문의 목록 조회(검색)  -->
	<select id="selectinquiryBoardList_search" resultMap="board_rm">
		 SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_ST,
         
		<![CDATA[
		CASE  
		   WHEN SYSDATE - BOARD_C_DATE < 1/24/60
		   THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
		   WHEN SYSDATE - BOARD_C_DATE < 1/24
		   THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
		   WHEN SYSDATE - BOARD_C_DATE < 1
		   THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
		   ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
		END BOARD_C_DATE,
		]]>
		
      (SELECT COUNT(*) FROM "REPLY" C
      WHERE C.BOARD_NO = B.BOARD_NO
      AND C.REPLY_ST = 'N') REPLY_COUNT


      FROM "BOARD" B
      JOIN "MEMBER" USING(MEMBER_NO)
      WHERE (BOARD_ST = 'N' OR BOARD_ST = 'D')
      AND CATEGORY_NO = ${categoryNo}
      AND MEMBER_NAME LIKE '%${query}%'
      
      
      ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 1:1문의 게시글 작성 -->
	<insert id="inquiryBoardWrite" parameterType="Board"
		useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BOARD
		VALUES( #{boardNo},
		#{boardTitle},
		#{boardContent},
		DEFAULT, NULL, DEFAULT, #{boardSt},
		#{memberNo},
		#{categoryNo}
		)
	</insert>
	
	<!-- 1:1문의 파일 삽입 -->
	<insert id="insertInquiryFile" parameterType="list">
		INSERT INTO BOARD_FILE
		SELECT SEQ_FILE_NO.NEXTVAL, A.*
		FROM (
		<foreach collection="list" item="file" separator=" UNION ALL ">
			SELECT
			#{file.boardFilePath} BOARD_FILE_PATH,
			#{file.boardFileRename} BOARD_FILE_RENAME,
			#{file.boardFileOriginal} BOARD_FILE_ORIGINAL,
			#{file.boardFileCategoryNo} CATEGORY_NO,
			#{file.boardNo} BOARD_NO
			FROM DUAL
		</foreach>

		) A
	</insert>
	
	<!-- 공지사항 목록 검색 조회 -->
	<select id="selectNoticeBoardList" resultMap="board_rm">
	SELECT BOARD_NO, BOARD_TITLE, MEMBER_NAME, BOARD_COUNT, BOARD_CONTENT, BOARD_ST,
		 <![CDATA[
		        CASE  
		        WHEN SYSDATE - BOARD_C_DATE < 1/24/60
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60 * 60 ) || '초 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1/24
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24 * 60) || '분 전'
		        WHEN SYSDATE - BOARD_C_DATE < 1
		        THEN FLOOR( (SYSDATE - BOARD_C_DATE) * 24) || '시간 전'
		        ELSE TO_CHAR(BOARD_C_DATE, 'YYYY-MM-DD')
		        END BOARD_C_DATE,
		    ]]>

		       (SELECT COUNT(*) FROM "REPLY" R
			    WHERE R.BOARD_NO = B.BOARD_NO
				AND R.REPLY_ST = 'N') REPLY_COUNT

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "CATEGORY" USING(CATEGORY_NO)
		WHERE BOARD_ST = 'N'
		AND CATEGORY_NO = ${categoryNo}
		ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- 특정 게시글 댓글 조회 -->
	<select id="selectCommentList" resultMap="reply_rm">
		SELECT  C.* FROM
		(SELECT REPLY_NO, REPLY_CONTENT,
		TO_CHAR(REPLY_DATE, 'YYYY"년"
		MM"월" DD"일" HH24"시" MI"분" SS"초"') REPLY_DATE,
		BOARD_NO, MEMBER_NO,
		MEMBER_NAME, MEMBER_PROFILE, REPLY_ST
		FROM REPLY
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo} )C
		WHERE
		REPLY_ST = 'N'
		ORDER  BY REPLY_NO
	</select>
	

</mapper>








