<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="evaluationMapper">

	<resultMap type="Evaluation" id="evaluation_rm">
		<id property="rateNo" column="CLASS_RATE_NO" />
		
		<result property="rateContent" column="CLASS_RATE_CONTENT" />
		<result property="rateLike" column="CLASS_RATE_LIKE" />
		<result property="classNo" column="CLASS_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="className" column="CLASS_NM" />
		<result property="memberName" column="MEMBER_NAME" />
	</resultMap>

	<!-- 과목 평가 조회 (교직원) -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM CLASS_RATE
	</select>
	
	<select id="selectRateList" resultMap="evaluation_rm">
		SELECT CLASS_RATE_NO, CLASS_RATE_CONTENT, CLASS_RATE_LIKE, R.CLASS_NO, R.MEMBER_NO
		       , CLASS_NM, MEMBER_NAME
		FROM CLASS_RATE R
		JOIN CLASS C ON(C.CLASS_NO = R.CLASS_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = C.MEMBER_NO)
		ORDER BY 1 DESC
	</select>
	
	<!-- 과목 평가 조회 (교수) -->
	<select id="listCount" resultType="_int">
		SELECT COUNT(*)
		FROM CLASS_RATE R
		JOIN CLASS C ON(C.CLASS_NO = R.CLASS_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = C.MEMBER_NO)
		WHERE M.MEMBER_NO = #{memberNo}
	</select>
	
	<select id="RateList" resultMap="evaluation_rm">
		SELECT CLASS_RATE_NO, CLASS_RATE_CONTENT, CLASS_RATE_LIKE, R.CLASS_NO, R.MEMBER_NO
		       , CLASS_NM, MEMBER_NAME
		FROM CLASS_RATE R
		JOIN CLASS C ON(C.CLASS_NO = R.CLASS_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = C.MEMBER_NO)
		WHERE M.MEMBER_NO = #{memberNo}
		ORDER BY 1 DESC
	</select>
	
	<select id="selectClassList" resultMap="evaluation_rm">
		SELECT DISTINCT CLASS_NM, MEMBER_NAME
		FROM CLASS C
		JOIN MEMBER M ON (M.MEMBER_NO = C.MEMBER_NO)
		WHERE C.MEMBER_NO = #{memberNo}
		ORDER BY 1
	</select>
	
	<!-- 평가 목록 조회(검색어) 갯수 조회 -->
	<select id="searchListCount" resultType="_int">
		SELECT COUNT(*)
		FROM CLASS_RATE R
		JOIN CLASS C ON(C.CLASS_NO = R.CLASS_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = C.MEMBER_NO)
		WHERE CLASS_NM = #{key}
		<if test='memberNo != null'>
			AND M.MEMBER_NO = #{memberNo}
		</if>
	</select>
	
	<!-- 평가 목록 조회(검색어) -->
	<select id="searchRateList" resultMap="evaluation_rm">
		SELECT CLASS_RATE_NO, CLASS_RATE_CONTENT, CLASS_RATE_LIKE, R.CLASS_NO, R.MEMBER_NO
		       , CLASS_NM, MEMBER_NAME
		FROM CLASS_RATE R
		JOIN CLASS C ON(C.CLASS_NO = R.CLASS_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = C.MEMBER_NO)
		WHERE CLASS_NM = #{key}
		<if test='memberNo != null'>
			AND M.MEMBER_NO = #{memberNo}
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 과목평가가 있는 과목 목록 조회 -->
	<select id="classList" resultMap="evaluation_rm">
		SELECT DISTINCT CLASS_NM
		FROM CLASS C
		JOIN CLASS_RATE R ON (R.CLASS_NO = C.CLASS_NO)
		ORDER BY 1
	</select>


</mapper>








