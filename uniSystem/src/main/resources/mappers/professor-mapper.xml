<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="professorMapper">

	<!-- 회원 정보 resultMap -->
	<resultMap type="Member" id="member_rm">
	  
		<id property="memberNo" column="MEMBER_NO" />
		
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberAddr" column="MEMBER_ADDR" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberPhone" column="MEMBER_PHONE" />
		<result property="memberGen" column="MEMBER_GEN" />
		<result property="memberDate" column="MEMBER_DATE" />
		<result property="memberGrade" column="MEMBER_GRADE" />
		<result property="memberTerm" column="MEMBER_TERM" />
		<result property="memberStatus" column="MEMBER_STATUS" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
		<result property="memberSsn" column="MEMBER_SSN" />
			   
			   
		<result property="departmentNo" column="DEPARTMENT_NO" />
		<result property="departmentName" column="DEPARTMENT_NAME" />
		
		<result property="memberAge" column="MEMBER_AGE" />
		
		<result property="lecturePoint" column="LECTURE_POINT" />
		<result property="lectureCount" column="LECTURE_COUNT" />
		<result property="lectureGrade" column="LECTURE_GRADE" />
		<result property="lectureTerm" column="LECTURE_TERM" />
		
		<result property="classNo" column="CLASS_NO" />
		<result property="classNm" column="CLASS_NM" />
		
	</resultMap>
	
	<!-- 교과목 정보 resultMap -->
	<resultMap type="Subject" id="class_rm">
		<id property="classNo" column="CLASS_NO" />
		
		<result property="className" column="CLASS_NM" />
		<result property="classPoint" column="CLASS_POINT" />
		<result property="classMax" column="CLASS_MAX" />
		<result property="classGrade" column="CLASS_GRADE" />
		<result property="classTrem" column="CLASS_TREM" />
		<result property="classDay" column="CLASS_DAY" />
		<result property="classStart" column="CLASS_START" />
		<result property="classEnd" column="CLASS_END" />
		
		<result property="departmentNo" column="DEPARTMENT_NO" />
		<result property="departmentName" column="DEPARTMENT_NAME" />
		<result property="memeberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
	</resultMap>
	
	<!-- 수강 정보 resultMap -->
	<resultMap type="Lecture" id="lecture_rm">
		<id property="classNo" column="CLASS_NO" />
		
		<result property="classNm" column="CLASS_NM" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="lecturePoint" column="LECTURE_POINT" />
		<result property="lectureGrade" column="LECTURE_GRADE" />
		<result property="lectureTerm" column="LECTURE_TERM" />
	</resultMap>
	
	<!-- 모든 학생이 수강중인 과목 목록 조회 -->
	<select id="lectureList" resultMap="lecture_rm">
      SELECT L.CLASS_NO, L.MEMBER_NO, C.CLASS_NM, L.LECTURE_POINT, L.LECTURE_GRADE, L.LECTURE_TERM
      FROM LECTURE L
      JOIN CLASS C ON C.CLASS_NO = L.CLASS_NO
	</select>
	

	<!-- 현재 재적중인 학생 수 조회 -->	
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_STATUS = 'N'
		AND SUBSTR(MEMBER_NO, 1, 2) = '01'
	</select>
	
	<!-- 현재 재적중인 학생 목록 조회 -->
	<select id="selectStudent" resultMap="member_rm">
<!-- 		SELECT M.MEMBER_NO, M.MEMBER_PW, M.MEMBER_ADDR, M.MEMBER_EMAIL, M.MEMBER_PHONE, M.MEMBER_GEN, M.MEMBER_DATE, M.MEMBER_GRADE, M.MEMBER_TERM, M.MEMBER_STATUS, M.MEMBER_NAME, M.MEMBER_PROFILE, M.MEMBER_SSN,
		    CASE
		        WHEN SUBSTR(MEMBER_SSN, 1, 2) BETWEEN '00' AND '21' THEN TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('20' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		        ELSE TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('19' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		    END AS MEMBER_AGE,
		    D.DEPARTMENT_NO, D.DEPARTMENT_NAME, L.LECTURE_POINT, C.CLASS_NO, C.CLASS_NM,
		    
		    (SELECT COUNT(*) FROM LECTURE
      		WHERE MEMBER_NO = L.MEMBER_NO) AS LECTURE_COUNT
		    
		FROM MEMBER M
		JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO
		JOIN LECTURE L ON L.MEMBER_NO = M.MEMBER_NO
        JOIN CLASS  C ON C.CLASS_NO = L.CLASS_NO
		WHERE SUBSTR(M.MEMBER_NO, 1, 2) = '01'
		AND M.MEMBER_STATUS = 'N'
        AND L.MEMBER_NO = M.MEMBER_NO
        ORDER BY C.CLASS_NM -->
   		SELECT M.MEMBER_NO, M.MEMBER_PW, M.MEMBER_ADDR, M.MEMBER_EMAIL, M.MEMBER_PHONE, M.MEMBER_GEN, M.MEMBER_DATE, M.MEMBER_GRADE, M.MEMBER_TERM, M.MEMBER_STATUS, M.MEMBER_NAME, M.MEMBER_PROFILE, M.MEMBER_SSN,
		    CASE
		        WHEN SUBSTR(MEMBER_SSN, 1, 2) BETWEEN '00' AND '21' THEN TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('20' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		        ELSE TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('19' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		    END AS MEMBER_AGE,
		    D.DEPARTMENT_NO, D.DEPARTMENT_NAME
		    
		FROM MEMBER M
		JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO

		WHERE SUBSTR(M.MEMBER_NO, 1, 2) = '01'
		AND M.MEMBER_STATUS = 'N'

        ORDER BY D.DEPARTMENT_NO
	</select>
	
	
	<!-- 현재 재적중인 학생 수 조회 - 검색 -->	
	<select id="getListCount_search" resultType="_int">
      SELECT COUNT(*)
      FROM MEMBER M
      
      <!-- 학과검색일 경우 조인 -->
      <if test='key == "dp"'>
         JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO
      </if>

      WHERE M.MEMBER_STATUS = 'N'
      AND SUBSTR(M.MEMBER_NO, 1, 2) = '01'

      <choose>
         <when test='key == "no"'>
            <!-- 학번 -->
            AND M.MEMBER_NO LIKE '%${query}%'
         </when>

         <when test='key == "nm"'>
            <!-- 이름 -->
            AND M.MEMBER_NAME LIKE '%${query}%'
         </when>

         <when test='key == "gr"'>
            <!-- 학년 -->
            AND M.MEMBER_GRADE LIKE '%${query}%'
         </when>

         <when test='key == "tr"'>
            <!-- 학기 -->
            AND M.MEMBER_TERM LIKE '%${query}%'
         </when>
         
         <when test='key == "dp"'>
            <!-- 학과 -->
            AND M.MEMBER_PHONE LIKE '%${query}%'
         </when>
      </choose>
   </select>
   
   
   
   <select id="searchStudent" resultMap="member_rm">
   		SELECT M.MEMBER_NO, M.MEMBER_PW, M.MEMBER_ADDR, M.MEMBER_EMAIL, M.MEMBER_PHONE, M.MEMBER_GEN, M.MEMBER_DATE, M.MEMBER_GRADE, M.MEMBER_TERM, M.MEMBER_STATUS, M.MEMBER_NAME, M.MEMBER_PROFILE, M.MEMBER_SSN,
		    CASE
		        WHEN SUBSTR(MEMBER_SSN, 1, 2) BETWEEN '00' AND '21' THEN TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('20' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		        ELSE TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('19' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		    END AS MEMBER_AGE,
		    D.DEPARTMENT_NO, D.DEPARTMENT_NAME
		    
		FROM MEMBER M
		JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO

		WHERE SUBSTR(M.MEMBER_NO, 1, 2) = '01'
		AND M.MEMBER_STATUS = 'N'

		<choose>
         <when test='key == "no"'>
            <!-- 학번 -->
            AND M.MEMBER_NO LIKE '%${query}%'
         </when>

         <when test='key == "nm"'>
            <!-- 이름 -->
            AND M.MEMBER_NAME LIKE '%${query}%'
         </when>

         <when test='key == "gr"'>
            <!-- 학년 -->
            AND M.MEMBER_GRADE LIKE '%${query}%'
         </when>

         <when test='key == "tr"'>
            <!-- 학기 -->
            AND M.MEMBER_TERM LIKE '%${query}%'
         </when>
         
         <when test='key == "dp"'>
            <!-- 학과 -->
            AND M.MEMBER_PHONE LIKE '%${query}%'
         </when>
      </choose>
      
      
      ORDER BY D.DEPARTMENT_NO
		
   </select>
   
   
   
   <!-- 학생 정보 비동기 통신 -->
   <select id="selectMemberList" resultMap="member_rm">
   
        SELECT M.MEMBER_NO, M.MEMBER_PW, M.MEMBER_ADDR, M.MEMBER_EMAIL, M.MEMBER_PHONE, M.MEMBER_GEN, M.MEMBER_DATE, M.MEMBER_GRADE, M.MEMBER_TERM, M.MEMBER_STATUS, M.MEMBER_NAME, M.MEMBER_PROFILE, M.MEMBER_SSN,
		    CASE
		        WHEN SUBSTR(MEMBER_SSN, 1, 2) BETWEEN '00' AND '21' THEN TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('20' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		        ELSE TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('19' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		    END AS MEMBER_AGE,
		    D.DEPARTMENT_NO, D.DEPARTMENT_NAME, L.LECTURE_GRADE, L.LECTURE_TERM, L.LECTURE_POINT, C.CLASS_NO, C.CLASS_NM,
		    
		    (SELECT COUNT(*) FROM LECTURE
      		WHERE MEMBER_NO = L.MEMBER_NO) AS LECTURE_COUNT
		    
		FROM MEMBER M
		JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO
		JOIN LECTURE L ON L.MEMBER_NO = M.MEMBER_NO
        JOIN CLASS  C ON C.CLASS_NO = L.CLASS_NO
		WHERE SUBSTR(M.MEMBER_NO, 1, 2) = '01'
		AND M.MEMBER_STATUS = 'N'
        AND L.MEMBER_NO = M.MEMBER_NO
		
   </select>
   
   <!-- 검색 조건에 따른 학생 정보 비동기 통신 -->
   <select id="searchMemberList" resultMap="member_rm">
   
        SELECT M.MEMBER_NO, M.MEMBER_PW, M.MEMBER_ADDR, M.MEMBER_EMAIL, M.MEMBER_PHONE, M.MEMBER_GEN, M.MEMBER_DATE, M.MEMBER_GRADE, M.MEMBER_TERM, M.MEMBER_STATUS, M.MEMBER_NAME, M.MEMBER_PROFILE, M.MEMBER_SSN,
		    CASE
		        WHEN SUBSTR(MEMBER_SSN, 1, 2) BETWEEN '00' AND '21' THEN TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('20' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		        ELSE TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('19' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
		    END AS MEMBER_AGE,
		    D.DEPARTMENT_NO, D.DEPARTMENT_NAME, L.LECTURE_GRADE, L.LECTURE_TERM, L.LECTURE_POINT, C.CLASS_NO, C.CLASS_NM,
		    
		    (SELECT COUNT(*) FROM LECTURE
      		WHERE MEMBER_NO = L.MEMBER_NO) AS LECTURE_COUNT
		    
		FROM MEMBER M
		JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO
		JOIN LECTURE L ON L.MEMBER_NO = M.MEMBER_NO
        JOIN CLASS  C ON C.CLASS_NO = L.CLASS_NO
		WHERE SUBSTR(M.MEMBER_NO, 1, 2) = '01'
		AND M.MEMBER_STATUS = 'N'
        AND L.MEMBER_NO = M.MEMBER_NO	
        
		<choose>
			<!-- 이름 -->
			<when test='key == "name"'>
				AND M.MEMBER_NAME LIKE '%${query}%'
			</when>
			<!-- 학번 -->
			<when test='key == "no"'>
				AND M.MEMBER_NO LIKE '%${query}%'
			</when>
		</choose>
		
   </select>
   
   
   <!-- 여러가지 선택 조건(학년, 학기, 학과, 과목)에 검색 된 학생 목록 성적 조회 비동기 AJAX -->
	<select id="searchMember" resultMap="member_rm">
	    SELECT M.MEMBER_NO, M.MEMBER_PW, M.MEMBER_ADDR, M.MEMBER_EMAIL, M.MEMBER_PHONE, M.MEMBER_GEN, M.MEMBER_DATE, M.MEMBER_GRADE, M.MEMBER_TERM, M.MEMBER_STATUS, M.MEMBER_NAME, M.MEMBER_PROFILE, M.MEMBER_SSN,
	    CASE
	        WHEN SUBSTR(MEMBER_SSN, 1, 2) BETWEEN '00' AND '21' THEN TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('20' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
	        ELSE TO_CHAR(SYSDATE, 'YYYY') - TO_NUMBER('19' || SUBSTR(MEMBER_SSN, 1, 2)) - 1
	    END AS MEMBER_AGE,
	    D.DEPARTMENT_NO, D.DEPARTMENT_NAME, L.LECTURE_GRADE, L.LECTURE_TERM, L.LECTURE_POINT, C.CLASS_NO, C.CLASS_NM,
	    
	    (SELECT COUNT(*) FROM LECTURE
	    WHERE MEMBER_NO = L.MEMBER_NO) AS LECTURE_COUNT
	    
	    FROM MEMBER M
	    JOIN DEPARTMENT D ON M.DEPARTMENT_NO = D.DEPARTMENT_NO
	    JOIN LECTURE L ON L.MEMBER_NO = M.MEMBER_NO
	    JOIN CLASS  C ON C.CLASS_NO = L.CLASS_NO
	    WHERE SUBSTR(M.MEMBER_NO, 1, 2) = '01'
	    AND M.MEMBER_STATUS = 'N'
	    <!-- AND L.MEMBER_NO = M.MEMBER_NO	 -->
	    
	    <!-- 학년 조건 -->
	    <if test='grade != "" and grade != null'>
	        AND L.LECTURE_GRADE LIKE #{grade}
	    </if>
	    <!-- 학기 조건 -->
	    <if test='term != "" and term != null'>
	        AND L.LECTURE_TERM LIKE #{term}
	    </if>
	    <!-- 학과 조건 -->
	    <if test='depart != "" and depart != null'>
	        AND D.DEPARTMENT_NAME LIKE #{depart}
	    </if>
	    <!-- 과목 조건 -->
	    <if test='classes != "" and classes != null'>
	        AND C.CLASS_NM LIKE #{classes}
	    </if>
	    
	</select>
	
	<!-- 학과 조회 -->
	<select id="departmentList" resultMap="member_rm">
        SELECT DEPARTMENT_NO, DEPARTMENT_NAME
        FROM DEPARTMENT
	</select>
	
	<!-- 과목 조회 -->
	<select id="classList" resultMap="member_rm">
        SELECT CLASS_NO, CLASS_NM, DEPARTMENT_NO
        FROM CLASS
        JOIN DEPARTMENT USING(DEPARTMENT_NO)
	</select>
	
	<!-- 성적 업데이트 -->
	<update id="updateGrades" parameterType="java.util.List">
	    UPDATE LECTURE
	    SET LECTURE_POINT = #{lecturePoint}
	    WHERE CLASS_NO = #{classNo}
	      AND MEMBER_NO = #{memberNo}
	      AND LECTURE_GRADE = #{lectureGrade}
	      AND LECTURE_TERM = #{lectureTerm}
	</update>


	

</mapper>








